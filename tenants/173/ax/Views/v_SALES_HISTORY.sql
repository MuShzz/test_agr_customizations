CREATE VIEW [ax_cus].[v_SALES_HISTORY]
AS

	SELECT
			CAST(ROW_NUMBER() OVER (ORDER BY it.DATEPHYSICAL, it.ITEMID) AS BIGINT) 									AS [TRANSACTION_ID],
			CAST(it.ITEMID AS NVARCHAR(255))																	AS [ITEM_NO],
			CAST(id.INVENTLOCATIONID AS NVARCHAR(255))																AS LOCATION_NO,
			CAST(it.DATEPHYSICAL AS DATE) 																				AS [DATE],
			CAST(-SUM(CASE WHEN(
						(ito.REFERENCECATEGORY = 0 AND isnull(st.CUSTACCOUNT,-99) NOT LIKE '%-999')
						OR 
						(ito.REFERENCECATEGORY = 4 AND it.QTY < 0)
						) THEN it.QTY
						ELSE 0 
						END) AS DECIMAL(18,4))																	AS SALE,
			CAST('' AS NVARCHAR(255))																			AS [CUSTOMER_NO],
            CAST('' AS NVARCHAR(255))																			AS [REFERENCE_NO],
            CAST(0 AS BIT)																						AS [IS_EXCLUDED]
			
	FROM ax.INVENTTRANS it
		INNER JOIN ax_cus.INVENTTRANSORIGIN ito 
			ON it.INVENTTRANSORIGIN = ito.RECID
			AND it.DATAAREAID = ito.DATAAREAID
			AND it.[PARTITION] = ito.[PARTITION]
			AND it.DATEPHYSICAL <> '1900-01-01 00:00:00.000'
		INNER JOIN ax_cus.INVENTDIM id
			ON id.INVENTDIMID = it.INVENTDIMID
			AND id.DATAAREAID = it.DATAAREAID
			AND id.[PARTITION] = it.[PARTITION]
		LEFT JOIN ax_cus.WHSINVENTSTATUS wis 
			ON wis.INVENTSTATUSID = id.INVENTSTATUSID
			AND wis.DATAAREAID = it.DATAAREAID
			AND wis.[PARTITION] = it.[PARTITION]
			AND wis.INVENTSTATUSBLOCKING <> 1
		LEFT OUTER JOIN ax_cus.SALESTABLE st 
			ON st.SALESID = ito.REFERENCEID
		where id.INVENTLOCATIONID != 'Flut'
		GROUP BY
			it.DATEPHYSICAL,
			it.ITEMID,
			id.INVENTLOCATIONID
