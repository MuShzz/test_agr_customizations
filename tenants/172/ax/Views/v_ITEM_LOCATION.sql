CREATE VIEW [ax_cus].[v_ITEM_LOCATION] 
AS

SELECT  DISTINCT
	CAST(it.[ITEMID] AS NVARCHAR(255)) AS [ITEM_NO],
	l.NO AS [LOCATION_NO],
	CAST(NULL AS DECIMAL(18,4)) AS MIN_STOCK,
	CAST(NULL AS DECIMAL(18,4))          AS [SAFETY_STOCK_UNITS],
        CAST(NULL AS DECIMAL(18,4))                         AS [MIN_DISPLAY_STOCK],
	CAST(NULL AS DECIMAL(18,4)) AS MAX_STOCK,
	CAST(CASE
		  WHEN IPS.STOPPED = 1 THEN 1
		  WHEN it.SPAFACTOR = 6 THEN 1 ELSE 0 END AS BIT)  AS CLOSED, --Vörur með spástuðul G eru lokaðar, a=0 b=1 o.s.frv,
		  CAST(CASE
		  WHEN IPS.STOPPED = 1 THEN 1
		  WHEN it.SPAFACTOR = 6 THEN 1 ELSE 0 END AS BIT)                                    AS [CLOSED_FOR_ORDERING],
		  CAST(ibg.DESCRIPTION AS NVARCHAR(1000)) AS RESPONSIBLE,
  CAST(ISNULL(erpt_prod.NAME,it.NAMEALIAS) AS NVARCHAR(255)) AS [NAME],
  	CAST(ISNULL(erpt_prod.[Description], it.NAMEALIAS) AS NVARCHAR(1000)) AS [description],
   CAST(CASE WHEN it.PRIMARYVENDORID = '' THEN 'vendor_missing' 
			ELSE it.PRIMARYVENDORID 
			END AS NVARCHAR(255)) AS PRIMARY_VENDOR_NO,
   CAST(NULL AS SMALLINT) AS [PURCHASE_LEAD_TIME_DAYS],
       CAST(NULL AS SMALLINT)                               AS [TRANSFER_LEAD_TIME_DAYS],
   CAST(ISNULL(vt.AGROrderFrequency, 0) AS SMALLINT) AS ORDER_FREQUENCY_DAYS,
   CAST(NULL AS SMALLINT) AS ORDER_COVERAGE_DAYS,
	CAST(NULL AS DECIMAL(18,4)) AS MIN_ORDER_QTY,
   CAST(ISNULL(cv.EXTERNALITEMID, '') AS NVARCHAR(50)) AS ORIGINAL_NO,
   CAST(COALESCE(price.amount,itm.Price,0) AS [DECIMAL](18, 4)) AS SALE_PRICE,
   CAST(NULL AS DECIMAL(18,4)) AS COST_PRICE,
   CAST(NULL AS DECIMAL(18,4)) AS Purchase_price,
   CAST(NULL AS DECIMAL(18,4)) AS ORDER_MULTIPLE,
   	CAST(ISNULL(it.CEPALLETQTY,1) AS INT) AS QTY_PALLET,
	CAST(ISNULL(it.CEQTYPERLAYER,1) AS INT) AS QTY_LAYER,
	CASE
		WHEN it.AGRPURCHQTY = 0 THEN CAST(it.[UNITVOLUME] AS [DECIMAL](18, 4))
		ELSE CAST((it.[AGRLENGTH] * it.[AGRWIDTH] * it.[AGRHEIGHT] / it.[AGRPURCHQTY]) AS [DECIMAL](18, 4))
	END AS VOLUME,
	CAST(it.[NETWEIGHT] AS [DECIMAL](18, 4)) + CAST(ISNULL(it.[TARAWEIGHT],0) AS [DECIMAL](18, 4)) AS [WEIGHT],
	CAST(0 AS DECIMAL(18,4))                             AS [REORDER_POINT],
       CAST(1 AS BIT)                                       AS [INCLUDE_IN_AGR],
	   CAST(NULL AS BIT)                                    AS [SPECIAL_ORDER],
       CAST(it.DATAAREAID AS NVARCHAR(4))                   AS [COMPANY]
	FROM (
		 SELECT 
			erp.RECID AS PRODUCT,
			NULL AS VARIANT,
			erp.[PARTITION],
			erp.PRODUCTTYPE
		 FROM ax_cus.ECORESPRODUCT erp 
		 WHERE erp.[PRODUCTMASTER] IS NULL AND erp.PRODUCTTYPE = 1
	) products
	INNER JOIN ax_cus.INVENTTABLE it ON it.PRODUCT = products.PRODUCT AND it.[PARTITION] = products.[PARTITION]
	LEFT JOIN ax_cus.VENDTABLE vt ON it.PRIMARYVENDORID= vt.ACCOUNTNUM --added by HeO
LEFT OUTER JOIN ax_cus.INVENTBUYERGROUP ibg ON it.ITEMBUYERGROUPID = ibg.GROUP_ AND it.DATAAREAID = ibg.DATAAREAID
	LEFT OUTER JOIN (
		SELECT 
			ecg.recid, 
			pc.product,/* ig.id,*/ 
			ep.DISPLAYPRODUCTNUMBER, 
			ROW_NUMBER() OVER (PARTITION BY pc.product, ep.DISPLAYPRODUCTNUMBER ORDER BY LEVEL_ DESC) grouppriority 
		FROM ax_cus.ECORESproductCATEGORY pc
		JOIN ax_cus.ECORESCATEGORY ecg ON ecg.RECID = pc.CATEGORY

		JOIN ax_cus.ECORESPRODUCT ep ON ep.recid = pc.PRODUCT
		) igg ON igg.PRODUCT = it.PRODUCT AND grouppriority = 1
	LEFT OUTER JOIN ax.ECORESPRODUCTTRANSLATION erpt_prod 
		ON  products.PRODUCT = erpt_prod.PRODUCT AND products.[PARTITION] = erpt_prod.[PARTITION] AND erpt_prod.LanguageId =  'is'
	LEFT JOIN ax.CustVendExternalItem cv ON it.ITEMID = cv.ITEMID AND it.primaryvendorid = cv.CUSTVENDRELATION 	
		AND it.DATAAREAID = cv.DATAAREAID AND it.[PARTITION] = cv.[PARTITION]  AND cv.MODULETYPE = 3
	LEFT JOIN ax.InventTableModule itm ON it.[ITEMID] = itm.ItemId AND itm.ModuleType = 2 --2:Sales order
	LEFT OUTER JOIN ax_cus.INVENTITEMPURCHSETUP IPS
		ON it.ITEMID = IPS.itemid
		AND cv.DATAAREAID = IPS.DATAAREAID
		AND 'AllBlank' = IPS.INVENTDIMID
	LEFT OUTER JOIN 
	( SELECT ITEMRELATION, MAX(amount) amount FROM ax_cus.PRICEDISCTABLE
	WHERE RELATION = 4
	AND module = 1
	AND ACCOUNTCODE = 2
	AND GETDATE() BETWEEN fromdate AND todate
	AND DATAAREAID = 'mfk'
	GROUP BY ITEMRELATION) price
	ON it.ITEMID = price.itemrelation 
	CROSS JOIN ax_cus.v_LOCATION l
	WHERE
	l.no IN ('Myl','Aku','Flut')
