CREATE VIEW [fo_cus].[v_SALES_HISTORY]
AS

   SELECT
    CAST(it.RecIdTrans AS NVARCHAR(255)) AS TRANSACTION_ID,
    CAST(it.ITEMID + CASE WHEN id.[CONFIGID] IS NULL OR id.[CONFIGID] = '' THEN '' ELSE '-' + ISNULL(id.CONFIGID, '')END AS NVARCHAR(255)) AS ITEM_NO,
    CAST(ISNULL(id.INVENTLOCATIONID,'')AS NVARCHAR(255)) AS LOCATION_NO,
    CAST(it.[DATEPHYSICAL] AS DATE) AS [DATE],
    CAST(SUM(IIF(it.[REFERENCECATEGORY] = 'Sales' AND CAST(it.QTY AS DECIMAL(18,4)) < 0, -CAST(it.QTY AS DECIMAL(18,4)), 0)) AS DECIMAL(18,4)) AS SALE,
	--CAST(SUM(IIF(it.ReferenceCategory = 'InventTransfer', -CAST(it.Qty AS DECIMAL(18,4)), 0)) AS DECIMAL(18,4)) AS [TRANSFER],
    CAST(it.REFERENCEID AS NVARCHAR(255)) AS REFERENCE_NO,
    CAST(0 AS BIT) AS IS_EXCLUDED,
    CAST(ISNULL(c.CUSTOMERACCOUNT, '') AS NVARCHAR(255)) AS CUSTOMER_NO -- Replace NULL with ''
FROM
    fo_cus.[InventTrans] it
LEFT JOIN fo_cus.SalesOrderLines sol 
    ON sol.INVENTORYLOTID = it.INVENTTRANSID
LEFT JOIN fo.SalesOrderHeaders soh
	ON soh.SALESORDERNUMBER = it.REFERENCEID
LEFT JOIN fo.Customers c
    ON soh.DELIVERYADDRESSLOCATIONID = c.DELIVERYADDRESSLOCATIONID
LEFT JOIN fo_cus.InventDim id ON id.INVENTDIMID = it.INVENTDIMID
WHERE
    it.[REFERENCECATEGORY] IN ('Sales') AND CAST(it.QTY AS DECIMAL(18,4)) < 0
GROUP BY
    it.RecIdTrans, 
    it.ITEMID, 
    CAST(it.DATEPHYSICAL AS DATE), 
    it.REFERENCECATEGORY,
	id.INVENTLOCATIONID,
	id.CONFIGID,
    sol.SHIPPINGWAREHOUSEID, 
    sol.SALESORDERNUMBER, 
    it.REFERENCEID, 
    c.CUSTOMERACCOUNT

