CREATE VIEW [ax_cus].[v_STOCK_LEVEL] 
AS
    
	SELECT  
        CAST(	it.[ITEMID] + 
			CASE 
				WHEN t2.INVENTSIZEID<>'' AND t2.INVENTSIZEID IS NOT NULL THEN '_'+t2.INVENTSIZEID 
				ELSE '' 
			END + 
			CASE 
				WHEN t2.INVENTCOLORID<>'' AND t2.INVENTCOLORID IS NOT NULL THEN '_'+t2.INVENTCOLORID 
				ELSE '' 
			END +
			CASE 
				WHEN t2.INVENTSTYLEID<>'' AND t2.INVENTSTYLEID IS NOT NULL THEN '_'+t2.INVENTSTYLEID 
				ELSE '' 
			END AS NVARCHAR(255))						AS ITEM_NO,
        CAST(t2.INVENTLOCATIONID AS NVARCHAR(255))			AS LOCATION_NO,
        DATEFROMPARTS(2100, 1, 1)							AS EXPIRE_DATE,
        CAST(CASE 
				WHEN SUM(t1.PHYSICALINVENT) < 0 THEN 0 
				ELSE SUM(t1.PHYSICALINVENT) 
			  END AS DECIMAL(18,4)
			)												AS STOCK_UNITS
	FROM 
		ax.INVENTSUM t1
		INNER JOIN ax.INVENTDIM t2			ON t2.INVENTDIMID = t1.INVENTDIMID AND t2.DATAAREAID = t1.DATAAREAID AND t2.PARTITION = t1.PARTITION
		INNER JOIN core.location_mapping_setup l			ON l.locationNo = t2.INVENTLOCATIONID
		INNER JOIN ax_cus.INVENTTABLE it	ON it.ITEMID = t1.ITEMID
    WHERE 
		t1.DATAAREAID = 'byko'
		AND t1.PARTITION ='5637144576'
		AND t1.PHYSICALINVENT < 1000000
		AND t1.CLOSED = 0 
		AND t1.PHYSICALINVENT <> 0 
		AND t2.INVENTLOCATIONID <> ''
	GROUP BY
        it.ITEMID, t2.INVENTLOCATIONID,t2.INVENTSIZEID,t2.INVENTCOLORID,t2.INVENTSTYLEID

