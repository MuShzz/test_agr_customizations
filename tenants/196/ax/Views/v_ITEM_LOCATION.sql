



CREATE VIEW [ax_cus].[v_ITEM_LOCATION]
AS

WITH cte AS 
(
	SELECT DISTINCT 
		A.ITEM_NO			AS ITEM_NO,
		A.LOCATION_NO		AS LOCATION_NO,
		CAST(0 AS BIT)		AS CLOSED
	FROM (
		--Map WH items assortment from order route
		SELECT DISTINCT 
			i.ITEM_NO				AS ITEM_NO,
			loc.INVENTLOCATIONID	AS LOCATION_NO
		FROM
			ax_cus.V_PURCHASE_ORDER_ROUTE i
			CROSS JOIN ax.INVENTLOCATION loc
		WHERE 1=1
			AND loc.INVENTLOCATIONID IN ('LAG390','LAG330','LAG339','LAG380')
			--AND i.LOCATION_NO NOT LIKE '%MOT'
			--AND i.[PRIMARY] = 0

		UNION
		
		--Items with purchase orders to MOT or main WH location should also come into WH assortment
		SELECT
			ITEM_NO, 
			LEFT(LOCATION_NO, 6) AS LOCATION_NO
		FROM
			ax_cus.v_UNDELIVERED_PURCHASE_ORDER
		WHERE
			LOCATION_NO IN ('LAG330','LAG330MOT','LAG339','LAG339MOT','LAG390','LAG390MOT','LAG380','LAG380MOT')

		UNION

		--Items with stock movement on WH locations should also come into WH assortment
		SELECT 
			ITEM_NO, 
			LOCATION_NO				
		FROM
			ax_cus.v_STOCK_HISTORY
		WHERE
			LOCATION_NO IN ('LAG330','LAG339','LAG390','LAG380') 
		GROUP BY
			ITEM_NO, LOCATION_NO

		UNION ALL
		
		--Items with order route from LAG212 to LAG380 should be in LAG380
		SELECT DISTINCT
			i.item_no								AS ITEM_NO
			,'LAG380'								AS LOCATION_NO
		FROM
			ax_cus.V_PURCHASE_ORDER_ROUTE i
			CROSS JOIN ax.INVENTLOCATION loc
		WHERE 1=1
			AND loc.INVENTLOCATIONID IN ('LAG212','LAG380')
			AND i.LOCATION_NO = 'LAG380'
			AND i.LOCATION_NO NOT LIKE '%MOT'
		) A
	)
	--Store assortment
	SELECT DISTINCT
		CASE WHEN
			LEN(v.sizeid) > 0
				THEN CONCAT(it.ITEMID,'_',v.sizeid)
		ELSE
			it.ITEMID
		END																AS [ITEM_NO],
		CONCAT('LAG', erc.BYKRETAILSTORENO)								AS [LOCATION_NO],
		CAST(itv.SAFETY_STOCK_UNITS AS DECIMAL(18, 4))					AS [SAFETY_STOCK_UNITS],
		CAST(itv.MIN_DISPLAY_STOCK AS DECIMAL(18, 4))					AS [MIN_DISPLAY_STOCK],
		CAST(itv.MAX_STOCK AS DECIMAL(18, 4))							AS [MAX_STOCK],
		CAST(itv.CLOSED_FOR_ORDERING AS BIT)							AS [CLOSED_FOR_ORDERING],
		CAST(it.ITEMBUYERGROUPID AS NVARCHAR(255))						AS [RESPONSIBLE],
		CAST(ISNULL(erpt_prod.NAME, it.NAMEALIAS) AS NVARCHAR(255))		AS [NAME],
		CAST(erpt_prod.DESCRIPTION AS NVARCHAR(1000))					AS [DESCRIPTION],
		CAST(itv.PRIMARY_VENDOR_NO AS NVARCHAR(255))					AS [PRIMARY_VENDOR_NO],
		CAST(itv.PURCHASE_LEAD_TIME_DAYS AS SMALLINT)					AS [PURCHASE_LEAD_TIME_DAYS],
		CAST(itv.TRANSFER_LEAD_TIME_DAYS AS SMALLINT)					AS [TRANSFER_LEAD_TIME_DAYS],
		CAST(itv.ORDER_FREQUENCY_DAYS AS SMALLINT)						AS [ORDER_FREQUENCY_DAYS],
		CAST(itv.ORDER_COVERAGE_DAYS AS SMALLINT)						AS [ORDER_COVERAGE_DAYS],
		CAST(itv.MIN_ORDER_QTY AS DECIMAL(18, 4))						AS [MIN_ORDER_QTY],
		CAST(itv.ORIGINAL_NO AS NVARCHAR(50))							AS [ORIGINAL_NO],
		CAST(itv.SALE_PRICE AS DECIMAL(18, 4))							AS [SALE_PRICE],
		CAST(itv.COST_PRICE AS DECIMAL(18, 4))							AS [COST_PRICE],
		CAST(itv.PURCHASE_PRICE AS DECIMAL(18, 4))						AS [PURCHASE_PRICE],
		CAST(itv.ORDER_MULTIPLE AS DECIMAL(18, 4))						AS [ORDER_MULTIPLE],
		CAST(itv.QTY_PALLET AS DECIMAL(18, 4))							AS [QTY_PALLET],
		CAST(it.UNITVOLUME AS DECIMAL(18, 4))							AS [VOLUME],
		CAST(it.NETWEIGHT AS DECIMAL(18, 4))							AS [WEIGHT],
		CAST(0 AS DECIMAL(18, 4))										AS [REORDER_POINT],
		CAST(1 AS BIT)													AS [INCLUDE_IN_AGR],
		CAST(itv.CLOSED AS BIT)											AS [CLOSED],
		CAST(itv.SPECIAL_ORDER AS BIT)									AS [SPECIAL_ORDER],
		CAST(it.DATAAREAID AS NVARCHAR(4))								AS [COMPANY]

	FROM
		ax_cus.ECORESCATEGORYHIERARCHY ech
		INNER JOIN ax_cus.ECORESCATEGORY erc					ON erc.CATEGORYHIERARCHY = ech.RECID
		INNER JOIN ax_cus.ECORESPRODUCTCATEGORY epc				ON epc.CATEGORYHIERARCHY = ech.RECID
		INNER JOIN ax_cus.INVENTTABLE it						ON it.[PRODUCT] = epc.[PRODUCT]
		LEFT JOIN  ax_cus.BYKPRODUCTCATEGORYINCLUDEVARIANT v	ON v.CATEGORY = erc.RECID AND v.ITEMID = it.ITEMID
		INNER JOIN ax_cus.v_ITEM itv							ON itv.NO = it.ITEMID		
		LEFT JOIN ax.ECORESPRODUCTTRANSLATION erpt_prod			ON erpt_prod.[PRODUCT] = it.[PRODUCT] AND erpt_prod.PARTITION = it.PARTITION AND erpt_prod.LANGUAGEID = 'is'
	WHERE
		erc.BYKRETAILSTORENO <> '' 

	UNION ALL

	--WH assortment
	SELECT
		c.ITEM_NO												AS ITEM_NO,
		c.LOCATION_NO											AS LOCATION_NO,
		CAST(i.SAFETY_STOCK_UNITS AS DECIMAL(18, 4))			AS [SAFETY_STOCK_UNITS],
		CAST(i.MIN_DISPLAY_STOCK AS DECIMAL(18, 4))				AS [MIN_DISPLAY_STOCK],
		CAST(i.MAX_STOCK AS DECIMAL(18, 4))						AS [MAX_STOCK],
		CAST(i.CLOSED_FOR_ORDERING AS BIT)						AS [CLOSED_FOR_ORDERING],
		CAST(i.RESPONSIBLE AS NVARCHAR(255))					AS [RESPONSIBLE],
		CAST(i.NAME AS NVARCHAR(255))							AS [NAME],
		CAST(i.DESCRIPTION AS NVARCHAR(1000))					AS [DESCRIPTION],
		CAST(i.PRIMARY_VENDOR_NO AS NVARCHAR(255))				AS [PRIMARY_VENDOR_NO],
		CAST(i.PURCHASE_LEAD_TIME_DAYS AS SMALLINT)				AS [PURCHASE_LEAD_TIME_DAYS],
		CAST(i.TRANSFER_LEAD_TIME_DAYS AS SMALLINT)				AS [TRANSFER_LEAD_TIME_DAYS],
		CAST(i.ORDER_FREQUENCY_DAYS AS SMALLINT)				AS [ORDER_FREQUENCY_DAYS],
		CAST(i.ORDER_COVERAGE_DAYS AS SMALLINT)					AS [ORDER_COVERAGE_DAYS],
		CAST(i.MIN_ORDER_QTY AS DECIMAL(18, 4))					AS [MIN_ORDER_QTY],
		CAST(i.ORIGINAL_NO AS NVARCHAR(50))						AS [ORIGINAL_NO],
		CAST(i.SALE_PRICE AS DECIMAL(18, 4))					AS [SALE_PRICE],
		CAST(i.COST_PRICE AS DECIMAL(18, 4))					AS [COST_PRICE],
		CAST(i.ORDER_MULTIPLE AS DECIMAL(18, 4))				AS [ORDER_MULTIPLE],
		CAST(i.PURCHASE_PRICE AS DECIMAL(18, 4))				AS [PURCHASE_PRICE],
		CAST(i.QTY_PALLET AS DECIMAL(18, 4))					AS [QTY_PALLET],
		CAST(i.VOLUME AS DECIMAL(18, 4))						AS [VOLUME],
		CAST(i.WEIGHT AS DECIMAL(18, 4))						AS [WEIGHT],
		CAST(0 AS DECIMAL(18, 4))								AS [REORDER_POINT],
		CAST(1 AS BIT)											AS [INCLUDE_IN_AGR],
		CAST(i.CLOSED AS BIT)									AS [CLOSED],
		CAST(i.SPECIAL_ORDER AS BIT)							AS [SPECIAL_ORDER],
		CAST(NULL AS NVARCHAR(4))								AS [COMPANY]
	FROM
		cte C
		LEFT JOIN ax_cus.v_ITEM i ON C.ITEM_NO = i.NO
		
	

