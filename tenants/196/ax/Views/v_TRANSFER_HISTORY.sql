
CREATE VIEW [ax_cus].[v_TRANSFER_HISTORY]
AS
WITH sale_total AS 
(	
	SELECT
		it.[ITEMID]
			+ CASE WHEN id.INVENTSIZEID  <> '' AND id.INVENTSIZEID IS NOT NULL THEN '_' + id.INVENTSIZEID ELSE '' END
			+ CASE WHEN id.INVENTCOLORID <> '' AND id.INVENTCOLORID IS NOT NULL THEN '_' + id.INVENTCOLORID ELSE '' END
			+ CASE WHEN id.INVENTSTYLEID <> '' AND id.INVENTSTYLEID IS NOT NULL THEN '_' + id.INVENTSTYLEID ELSE '' END 
																															AS ITEM_NO,
		lc.INVENTLOCATIONID 																								AS FROM_LOCATION_NO,
		loc.locationNo 																												AS TO_LOCATION_NO,
		it.DATEPHYSICAL 																									AS DATE,
		CASE WHEN ito.REFERENCECATEGORY = 4 AND it.qty < 0 THEN 0 ELSE 0 END												AS TRANSFER
	FROM ax.INVENTTRANS it
		INNER JOIN ax_cus.INVENTTRANSORIGIN ito		ON it.INVENTTRANSORIGIN = ito.RECID AND it.DATAAREAID = ito.DATAAREAID AND it.[PARTITION] = ito.[PARTITION]
		INNER JOIN ax.INVENTDIM id					ON id.inventdimid = it.inventdimid AND id.DATAAREAID = it.DATAAREAID AND id.[PARTITION] = ito.[PARTITION]
		INNER JOIN ax.INVENTLOCATION lc				ON lc.INVENTLOCATIONID = id.INVENTLOCATIONID AND lc.DATAAREAID = id.DATAAREAID AND lc.PARTITION = id.PARTITION
		INNER JOIN core.location_mapping_setup loc	ON loc.locationNo = id.INVENTLOCATIONID
	WHERE 
		it.DATEPHYSICAL <> '1900-01-01 00:00:00.000'
		AND NOT (CAST(it.MODIFIEDDATETIME AS DATE) = '2020-01-09' AND it.DATEPHYSICAL = '2020-01-08 00:00:00.000')
		AND it.qty BETWEEN -10000000 AND 10000000
	GROUP BY 
		it.DATEPHYSICAL,
		lc.INVENTLOCATIONID,
		loc.locationNo,
		it.[ITEMID]
			+ CASE WHEN id.INVENTSIZEID  <> '' AND id.INVENTSIZEID IS NOT NULL THEN '_' + id.INVENTSIZEID ELSE '' END
			+ CASE WHEN id.INVENTCOLORID <> '' AND id.INVENTCOLORID IS NOT NULL THEN '_' + id.INVENTCOLORID ELSE '' END
			+ CASE WHEN id.INVENTSTYLEID <> '' AND id.INVENTSTYLEID IS NOT NULL THEN '_' + id.INVENTSTYLEID ELSE '' END
		,CASE 
			WHEN ito.REFERENCECATEGORY = 4 AND it.qty < 0 THEN 0
			ELSE 0
		END
	HAVING SUM(it.QTY) != 0
	
)

    SELECT
		CAST(ROW_NUMBER() OVER (ORDER BY t.[DATE], t.[ITEM_NO]) AS BIGINT) 	AS TRANSACTION_ID,
        CAST(t.ITEM_NO AS NVARCHAR(255))									AS ITEM_NO,
		CAST(t.FROM_LOCATION_NO AS NVARCHAR(255))							AS FROM_LOCATION_NO,
        CAST(t.TO_LOCATION_NO AS NVARCHAR(255))								AS TO_LOCATION_NO,
        CAST(t.DATE AS DATE)												AS [DATE],
        CAST(SUM(t.TRANSFER) AS DECIMAL(18,4))								AS [TRANSFER]
	FROM sale_total t 	
	WHERE 1=1
	GROUP BY t.ITEM_NO, t.TO_LOCATION_NO, t.[DATE],t.FROM_LOCATION_NO

	UNION ALL

	SELECT
		CAST(ROW_NUMBER() OVER (ORDER BY t.[DATE], t.[ITEM_NO]) AS BIGINT) 	AS TRANSACTION_ID,
        CAST(t.ITEM_NO AS NVARCHAR(255))									AS ITEM_NO,
		CAST(t.FROM_LOCATION_NO AS NVARCHAR(255))							AS FROM_LOCATION_NO,
        CAST('LAG212' AS NVARCHAR(255))										AS TO_LOCATION_NO,
        CAST(t.DATE AS DATE)												AS [DATE],
       CAST(SUM(t.TRANSFER) AS DECIMAL(18,4))								AS [TRANSFER]
	FROM sale_total t 	
	WHERE 1=1
		AND t.DATE <= '2025-06-24'
		AND t.TO_LOCATION_NO = 'LAG305'		
	GROUP BY t.ITEM_NO, t.TO_LOCATION_NO, t.[DATE],t.FROM_LOCATION_NO
	


