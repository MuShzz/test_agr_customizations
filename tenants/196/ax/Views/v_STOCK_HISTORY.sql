

CREATE VIEW [ax_cus].[v_STOCK_HISTORY] 
AS

	SELECT 
		CAST(NULL AS BIGINT)																									AS [TRANSACTION_ID],
		CAST(it.[ITEMID]
				+ CASE WHEN id.INVENTSIZEID  <> '' AND id.INVENTSIZEID IS NOT NULL THEN '_' + id.INVENTSIZEID ELSE '' END
				+ CASE WHEN id.INVENTCOLORID <> '' AND id.INVENTCOLORID IS NOT NULL THEN '_' + id.INVENTCOLORID ELSE '' END
				+ CASE WHEN id.INVENTSTYLEID <> '' AND id.INVENTSTYLEID IS NOT NULL THEN '_' + id.INVENTSTYLEID ELSE '' END 
				 AS NVARCHAR(255))																								AS ITEM_NO,
		CAST(ID.INVENTLOCATIONID AS	NVARCHAR(255))																				AS LOCATION_NO,
		CAST(it.DATEPHYSICAL AS DATE) 		 																					AS [DATE],
		CAST(SUM(it.QTY) AS DECIMAL(18,4))	 																					AS STOCK_MOVE,
		CAST(NULL AS DECIMAL(18,4))																								AS STOCK_LEVEL
	FROM ax.INVENTTRANS it
		INNER JOIN ax_cus.INVENTTRANSORIGIN ito		ON it.INVENTTRANSORIGIN = ito.RECID AND it.DATAAREAID = ito.DATAAREAID AND it.[PARTITION] = ito.[PARTITION]
		INNER JOIN ax.INVENTDIM id					ON id.inventdimid = it.inventdimid AND id.DATAAREAID = it.DATAAREAID AND id.[PARTITION] = ito.[PARTITION]
		INNER JOIN core.location_mapping_setup lms	ON lms.locationNo=id.INVENTLOCATIONID
	WHERE 
		it.DATEPHYSICAL <> '1900-01-01 00:00:00.000'	
		AND it.DATEPHYSICAL >= '2019-01-08'	
		AND it.qty < 10000000						
	GROUP BY 
		it.DATEPHYSICAL,
		ID.INVENTLOCATIONID,
		CAST(it.[ITEMID]
						+ CASE WHEN id.INVENTSIZEID  <> '' AND id.INVENTSIZEID IS NOT NULL THEN '_' + id.INVENTSIZEID ELSE '' END
						+ CASE WHEN id.INVENTCOLORID <> '' AND id.INVENTCOLORID IS NOT NULL THEN '_' + id.INVENTCOLORID ELSE '' END
						+ CASE WHEN id.INVENTSTYLEID <> '' AND id.INVENTSTYLEID IS NOT NULL THEN '_' + id.INVENTSTYLEID ELSE '' END 
						 AS NVARCHAR(255))
	HAVING SUM(it.QTY) <> 0.0


