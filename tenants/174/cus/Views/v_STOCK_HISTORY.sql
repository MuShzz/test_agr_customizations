
CREATE VIEW [cus].[v_STOCK_HISTORY]
AS

	WITH stock_history 
	AS 
	(
		SELECT 
			it.ITEMID AS ITEM_NO,
			trans.DATEPHYSICAL AS DATE,
			SUM(trans.Qty / uc.Factor) AS STOCK_MOVE,
			id.INVENTLOCATIONID AS LOCATION_NO
		FROM  cus.INVENTTRANS trans 
		INNER JOIN cus.INVENTDIM id ON trans.INVENTDIMID=id.INVENTDIMID AND id.DATAAREAID=trans.DATAAREAID
		INNER JOIN cus.INVENTTABLE it ON it.ITEMID=trans.ITEMID AND it.DATAAREAID=id.DATAAREAID AND it.ITEMTYPE<>2
		INNER JOIN cus.UNITCONVERT uc ON uc.ITEMID=trans.ITEMID AND uc.DATAAREAID=id.DATAAREAID AND uc.TOUNIT='ks' AND uc.FACTOR <> 0
		INNER JOIN cus.InventTableModule itm ON itm.ITEMID = trans.ITEMID AND uc.FROMUNIT=itm.UNITID AND itm.DATAAREAID=id.DATAAREAID AND itm.MODULETYPE=0
		--INNER JOIN cus.DataAreas ls ON ls.company_id=id.INVENTLOCATIONID
		INNER JOIN core.location_mapping_setup lms ON lms.locationNo=id.INVENTLOCATIONID -- 19.05.2025.DFS Change to filter locations choosen in AGR
		WHERE (trans.DATEPHYSICAL >'2007-09-01')
		GROUP BY it.ITEMID, trans.DATEPHYSICAL, id.INVENTLOCATIONID
	)

    SELECT 
		ROW_NUMBER() OVER (ORDER BY CAST(ITEM_NO AS NVARCHAR(255)))	AS [TRANSACTION_ID],
		CAST(ITEM_NO AS NVARCHAR(255))      AS [ITEM_NO],
        CAST(LOCATION_NO AS NVARCHAR(255))  AS [LOCATION_NO],
        CAST(DATE AS DATE)                  AS [DATE],
        CAST(SUM(STOCK_MOVE) AS DECIMAL(18,4))   AS [STOCK_MOVE],
        CAST(NULL AS DECIMAL(18,4))  AS [STOCK_LEVEL]
    FROM
        stock_history
	GROUP BY CAST(ITEM_NO AS NVARCHAR(255)), CAST(DATE AS DATE), CAST(LOCATION_NO AS NVARCHAR(255))

